
/*  
 Copyright (C) 2006 Ferdinando Ametrano
 Copyright (C) 2005 Aurelien Chanudet
 Copyright (C) 2005 Eric Ehlers
 Copyright (C) 2006 Chiara Fornarola
 
 This file is part of QuantLib, a free-software/open-source library
 for financial quantitative analysts and developers - http://quantlib.org/

 QuantLib is free software: you can redistribute it and/or modify it
 under the terms of the QuantLib license.  You should have received a
 copy of the license along with this program; if not, please email
 <quantlib-dev@lists.sf.net>. The license is also available online at
 <http://quantlib.org/license.shtml>.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the license for more details.
*/

// This file was generated automatically by gensrc.py.  If you edit this file
// manually then your changes will be lost the next time gensrc runs.

// This source code file was generated from the following stub:
//      gensrc/gensrc/stubs/stub.doxygen.file

/*! \page func_shortratemodels Short Rate Models
\section overview Overview
functions to construct and use short-rate model objects.
\section functionlist Function List
\ref qlFuturesConvexityBias ()\n
\ref qlHullWhite ()\n
\ref qlVasicek ()\n

\section documentation Function Documentation
\anchor qlFuturesConvexityBias \b qlFuturesConvexityBias
\code

double returnValue

qlFuturesConvexityBias(
        double FuturesPrice
        double T1
        double T2
        double Sigma
        double A
        any Trigger)

\endcode
\par Description:

Returns Futures convexity bias (ForwardRate = FuturesImpliedRate - ConvexityBias) calculated as in G. Kirikos, D. Novak, 'Convexity Conundrums', Risk Magazine, March 1997.

\par Supported Platforms:

Excel

\param FuturesPrice Futures price (e.g. 94.56).
\param T1 Maturity date of the futures contract in years(e.g. 5.0).
\param T2 Maturity of the underlying Libor deposit in years (e.g. 5.25).
\param Sigma Hull-White volatility (e.g. 0.015).
\param A Hull-White mean reversion. Default value = 0.03.
\param Trigger dependency tracking trigger



\anchor qlHullWhite \b qlHullWhite
\code

string returnValue

qlHullWhite(
        string ObjectId
        string YieldCurve
        double A
        double Sigma
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class HullWhite and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param YieldCurve YieldTermStructure object ID.
\param A a.
\param Sigma volatility.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag



\anchor qlVasicek \b qlVasicek
\code

string returnValue

qlVasicek(
        string ObjectId
        double A
        double B
        double Lambda
        double Sigma
        bool Permanent
        any Trigger
        bool Overwrite)

\endcode
\par Description:

Construct an object of class Vasicek and return its id

\par Supported Platforms:

C++, Calc, Excel

\param ObjectId id of object to be created
\param A mean reverting speed.
\param B short-rate limit value.
\param Lambda risk premium.
\param Sigma volatility.
\param Permanent object permanent/nonpermanent
\param Trigger dependency tracking trigger
\param Overwrite overwrite flag





*/


